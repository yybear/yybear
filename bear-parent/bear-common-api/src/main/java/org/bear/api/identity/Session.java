/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bear.api.identity;  
@SuppressWarnings("all")
/** * 用户session */
@org.apache.avro.specific.AvroGenerated
public class Session extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Session\",\"namespace\":\"org.bear.api.identity\",\"doc\":\"* 用户session\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"* session id\"},{\"name\":\"token\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"* session token\"},{\"name\":\"uid\",\"type\":\"long\",\"doc\":\"* 关联的用户id\"},{\"name\":\"creationTime\",\"type\":\"long\",\"doc\":\"* session创建时间\"},{\"name\":\"ttl\",\"type\":\"long\",\"doc\":\"* 最长生存时间\"},{\"name\":\"tti\",\"type\":\"long\",\"doc\":\"* 最长不活动间隔时间\"},{\"name\":\"clientIp\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"* 用户登录时的ip\"},{\"name\":\"lastActiveTime\",\"type\":\"long\",\"doc\":\"* 最近活动时间\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** * session id */
  @Deprecated public long id;
  /** * session token */
  @Deprecated public java.lang.String token;
  /** * 关联的用户id */
  @Deprecated public long uid;
  /** * session创建时间 */
  @Deprecated public long creationTime;
  /** * 最长生存时间 */
  @Deprecated public long ttl;
  /** * 最长不活动间隔时间 */
  @Deprecated public long tti;
  /** * 用户登录时的ip */
  @Deprecated public java.lang.String clientIp;
  /** * 最近活动时间 */
  @Deprecated public long lastActiveTime;

  /**
   * Default constructor.
   */
  public Session() {}

  /**
   * All-args constructor.
   */
  public Session(java.lang.Long id, java.lang.String token, java.lang.Long uid, java.lang.Long creationTime, java.lang.Long ttl, java.lang.Long tti, java.lang.String clientIp, java.lang.Long lastActiveTime) {
    this.id = id;
    this.token = token;
    this.uid = uid;
    this.creationTime = creationTime;
    this.ttl = ttl;
    this.tti = tti;
    this.clientIp = clientIp;
    this.lastActiveTime = lastActiveTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return token;
    case 2: return uid;
    case 3: return creationTime;
    case 4: return ttl;
    case 5: return tti;
    case 6: return clientIp;
    case 7: return lastActiveTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: token = (java.lang.String)value$; break;
    case 2: uid = (java.lang.Long)value$; break;
    case 3: creationTime = (java.lang.Long)value$; break;
    case 4: ttl = (java.lang.Long)value$; break;
    case 5: tti = (java.lang.Long)value$; break;
    case 6: clientIp = (java.lang.String)value$; break;
    case 7: lastActiveTime = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * * session id   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * * session id   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'token' field.
   * * session token   */
  public java.lang.String getToken() {
    return token;
  }

  /**
   * Sets the value of the 'token' field.
   * * session token   * @param value the value to set.
   */
  public void setToken(java.lang.String value) {
    this.token = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * * 关联的用户id   */
  public java.lang.Long getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * * 关联的用户id   * @param value the value to set.
   */
  public void setUid(java.lang.Long value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'creationTime' field.
   * * session创建时间   */
  public java.lang.Long getCreationTime() {
    return creationTime;
  }

  /**
   * Sets the value of the 'creationTime' field.
   * * session创建时间   * @param value the value to set.
   */
  public void setCreationTime(java.lang.Long value) {
    this.creationTime = value;
  }

  /**
   * Gets the value of the 'ttl' field.
   * * 最长生存时间   */
  public java.lang.Long getTtl() {
    return ttl;
  }

  /**
   * Sets the value of the 'ttl' field.
   * * 最长生存时间   * @param value the value to set.
   */
  public void setTtl(java.lang.Long value) {
    this.ttl = value;
  }

  /**
   * Gets the value of the 'tti' field.
   * * 最长不活动间隔时间   */
  public java.lang.Long getTti() {
    return tti;
  }

  /**
   * Sets the value of the 'tti' field.
   * * 最长不活动间隔时间   * @param value the value to set.
   */
  public void setTti(java.lang.Long value) {
    this.tti = value;
  }

  /**
   * Gets the value of the 'clientIp' field.
   * * 用户登录时的ip   */
  public java.lang.String getClientIp() {
    return clientIp;
  }

  /**
   * Sets the value of the 'clientIp' field.
   * * 用户登录时的ip   * @param value the value to set.
   */
  public void setClientIp(java.lang.String value) {
    this.clientIp = value;
  }

  /**
   * Gets the value of the 'lastActiveTime' field.
   * * 最近活动时间   */
  public java.lang.Long getLastActiveTime() {
    return lastActiveTime;
  }

  /**
   * Sets the value of the 'lastActiveTime' field.
   * * 最近活动时间   * @param value the value to set.
   */
  public void setLastActiveTime(java.lang.Long value) {
    this.lastActiveTime = value;
  }

  /** Creates a new Session RecordBuilder */
  public static org.bear.api.identity.Session.Builder newBuilder() {
    return new org.bear.api.identity.Session.Builder();
  }
  
  /** Creates a new Session RecordBuilder by copying an existing Builder */
  public static org.bear.api.identity.Session.Builder newBuilder(org.bear.api.identity.Session.Builder other) {
    return new org.bear.api.identity.Session.Builder(other);
  }
  
  /** Creates a new Session RecordBuilder by copying an existing Session instance */
  public static org.bear.api.identity.Session.Builder newBuilder(org.bear.api.identity.Session other) {
    return new org.bear.api.identity.Session.Builder(other);
  }
  
  /**
   * RecordBuilder for Session instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Session>
    implements org.apache.avro.data.RecordBuilder<Session> {

    private long id;
    private java.lang.String token;
    private long uid;
    private long creationTime;
    private long ttl;
    private long tti;
    private java.lang.String clientIp;
    private long lastActiveTime;

    /** Creates a new Builder */
    private Builder() {
      super(org.bear.api.identity.Session.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bear.api.identity.Session.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Session instance */
    private Builder(org.bear.api.identity.Session other) {
            super(org.bear.api.identity.Session.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.token)) {
        this.token = data().deepCopy(fields()[1].schema(), other.token);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.uid)) {
        this.uid = data().deepCopy(fields()[2].schema(), other.uid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.creationTime)) {
        this.creationTime = data().deepCopy(fields()[3].schema(), other.creationTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ttl)) {
        this.ttl = data().deepCopy(fields()[4].schema(), other.ttl);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tti)) {
        this.tti = data().deepCopy(fields()[5].schema(), other.tti);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.clientIp)) {
        this.clientIp = data().deepCopy(fields()[6].schema(), other.clientIp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastActiveTime)) {
        this.lastActiveTime = data().deepCopy(fields()[7].schema(), other.lastActiveTime);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.bear.api.identity.Session.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.bear.api.identity.Session.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'token' field */
    public java.lang.String getToken() {
      return token;
    }
    
    /** Sets the value of the 'token' field */
    public org.bear.api.identity.Session.Builder setToken(java.lang.String value) {
      validate(fields()[1], value);
      this.token = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'token' field has been set */
    public boolean hasToken() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'token' field */
    public org.bear.api.identity.Session.Builder clearToken() {
      token = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'uid' field */
    public java.lang.Long getUid() {
      return uid;
    }
    
    /** Sets the value of the 'uid' field */
    public org.bear.api.identity.Session.Builder setUid(long value) {
      validate(fields()[2], value);
      this.uid = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'uid' field has been set */
    public boolean hasUid() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'uid' field */
    public org.bear.api.identity.Session.Builder clearUid() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'creationTime' field */
    public java.lang.Long getCreationTime() {
      return creationTime;
    }
    
    /** Sets the value of the 'creationTime' field */
    public org.bear.api.identity.Session.Builder setCreationTime(long value) {
      validate(fields()[3], value);
      this.creationTime = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'creationTime' field has been set */
    public boolean hasCreationTime() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'creationTime' field */
    public org.bear.api.identity.Session.Builder clearCreationTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ttl' field */
    public java.lang.Long getTtl() {
      return ttl;
    }
    
    /** Sets the value of the 'ttl' field */
    public org.bear.api.identity.Session.Builder setTtl(long value) {
      validate(fields()[4], value);
      this.ttl = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ttl' field has been set */
    public boolean hasTtl() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ttl' field */
    public org.bear.api.identity.Session.Builder clearTtl() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'tti' field */
    public java.lang.Long getTti() {
      return tti;
    }
    
    /** Sets the value of the 'tti' field */
    public org.bear.api.identity.Session.Builder setTti(long value) {
      validate(fields()[5], value);
      this.tti = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'tti' field has been set */
    public boolean hasTti() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'tti' field */
    public org.bear.api.identity.Session.Builder clearTti() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'clientIp' field */
    public java.lang.String getClientIp() {
      return clientIp;
    }
    
    /** Sets the value of the 'clientIp' field */
    public org.bear.api.identity.Session.Builder setClientIp(java.lang.String value) {
      validate(fields()[6], value);
      this.clientIp = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'clientIp' field has been set */
    public boolean hasClientIp() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'clientIp' field */
    public org.bear.api.identity.Session.Builder clearClientIp() {
      clientIp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'lastActiveTime' field */
    public java.lang.Long getLastActiveTime() {
      return lastActiveTime;
    }
    
    /** Sets the value of the 'lastActiveTime' field */
    public org.bear.api.identity.Session.Builder setLastActiveTime(long value) {
      validate(fields()[7], value);
      this.lastActiveTime = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'lastActiveTime' field has been set */
    public boolean hasLastActiveTime() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'lastActiveTime' field */
    public org.bear.api.identity.Session.Builder clearLastActiveTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public Session build() {
      try {
        Session record = new Session();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.token = fieldSetFlags()[1] ? this.token : (java.lang.String) defaultValue(fields()[1]);
        record.uid = fieldSetFlags()[2] ? this.uid : (java.lang.Long) defaultValue(fields()[2]);
        record.creationTime = fieldSetFlags()[3] ? this.creationTime : (java.lang.Long) defaultValue(fields()[3]);
        record.ttl = fieldSetFlags()[4] ? this.ttl : (java.lang.Long) defaultValue(fields()[4]);
        record.tti = fieldSetFlags()[5] ? this.tti : (java.lang.Long) defaultValue(fields()[5]);
        record.clientIp = fieldSetFlags()[6] ? this.clientIp : (java.lang.String) defaultValue(fields()[6]);
        record.lastActiveTime = fieldSetFlags()[7] ? this.lastActiveTime : (java.lang.Long) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
