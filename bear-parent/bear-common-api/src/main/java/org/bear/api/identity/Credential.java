/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bear.api.identity;  
@SuppressWarnings("all")
/** * 凭证 */
@org.apache.avro.specific.AvroGenerated
public class Credential extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Credential\",\"namespace\":\"org.bear.api.identity\",\"doc\":\"* 凭证\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"* 凭证标识：-1表示未持久化\"},{\"name\":\"uid\",\"type\":\"long\",\"doc\":\"* 用户ID（所属用户）\"},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"CredentialType\",\"symbols\":[\"USERNAME\",\"EMAIL\",\"MOBILE\",\"OAUTH\"]}],\"doc\":\"* 凭证类型\"},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"* 凭证名称：如邮件地址、手机号等\\r\\n\\t\\t *\\r\\n\\t\\t * @size min=0, max=100\"},{\"name\":\"value\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"* 凭证值：登录时为帐户密码，安全绑定认证时为认证码\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** * 凭证标识：-1表示未持久化 */
  @Deprecated public long id;
  /** * 用户ID（所属用户） */
  @Deprecated public long uid;
  /** * 凭证类型 */
  @Deprecated public org.bear.api.identity.CredentialType type;
  /** * 凭证名称：如邮件地址、手机号等
		 *
		 * @size min=0, max=100 */
  @Deprecated public java.lang.String name;
  /** * 凭证值：登录时为帐户密码，安全绑定认证时为认证码 */
  @Deprecated public java.lang.String value;

  /**
   * Default constructor.
   */
  public Credential() {}

  /**
   * All-args constructor.
   */
  public Credential(java.lang.Long id, java.lang.Long uid, org.bear.api.identity.CredentialType type, java.lang.String name, java.lang.String value) {
    this.id = id;
    this.uid = uid;
    this.type = type;
    this.name = name;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return uid;
    case 2: return type;
    case 3: return name;
    case 4: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: uid = (java.lang.Long)value$; break;
    case 2: type = (org.bear.api.identity.CredentialType)value$; break;
    case 3: name = (java.lang.String)value$; break;
    case 4: value = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * * 凭证标识：-1表示未持久化   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * * 凭证标识：-1表示未持久化   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * * 用户ID（所属用户）   */
  public java.lang.Long getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * * 用户ID（所属用户）   * @param value the value to set.
   */
  public void setUid(java.lang.Long value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'type' field.
   * * 凭证类型   */
  public org.bear.api.identity.CredentialType getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * * 凭证类型   * @param value the value to set.
   */
  public void setType(org.bear.api.identity.CredentialType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'name' field.
   * * 凭证名称：如邮件地址、手机号等
		 *
		 * @size min=0, max=100   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * * 凭证名称：如邮件地址、手机号等
		 *
		 * @size min=0, max=100   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'value' field.
   * * 凭证值：登录时为帐户密码，安全绑定认证时为认证码   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * * 凭证值：登录时为帐户密码，安全绑定认证时为认证码   * @param value the value to set.
   */
  public void setValue(java.lang.String value) {
    this.value = value;
  }

  /** Creates a new Credential RecordBuilder */
  public static org.bear.api.identity.Credential.Builder newBuilder() {
    return new org.bear.api.identity.Credential.Builder();
  }
  
  /** Creates a new Credential RecordBuilder by copying an existing Builder */
  public static org.bear.api.identity.Credential.Builder newBuilder(org.bear.api.identity.Credential.Builder other) {
    return new org.bear.api.identity.Credential.Builder(other);
  }
  
  /** Creates a new Credential RecordBuilder by copying an existing Credential instance */
  public static org.bear.api.identity.Credential.Builder newBuilder(org.bear.api.identity.Credential other) {
    return new org.bear.api.identity.Credential.Builder(other);
  }
  
  /**
   * RecordBuilder for Credential instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Credential>
    implements org.apache.avro.data.RecordBuilder<Credential> {

    private long id;
    private long uid;
    private org.bear.api.identity.CredentialType type;
    private java.lang.String name;
    private java.lang.String value;

    /** Creates a new Builder */
    private Builder() {
      super(org.bear.api.identity.Credential.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bear.api.identity.Credential.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Credential instance */
    private Builder(org.bear.api.identity.Credential other) {
            super(org.bear.api.identity.Credential.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uid)) {
        this.uid = data().deepCopy(fields()[1].schema(), other.uid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.type)) {
        this.type = data().deepCopy(fields()[2].schema(), other.type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.name)) {
        this.name = data().deepCopy(fields()[3].schema(), other.name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.bear.api.identity.Credential.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.bear.api.identity.Credential.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'uid' field */
    public java.lang.Long getUid() {
      return uid;
    }
    
    /** Sets the value of the 'uid' field */
    public org.bear.api.identity.Credential.Builder setUid(long value) {
      validate(fields()[1], value);
      this.uid = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'uid' field has been set */
    public boolean hasUid() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'uid' field */
    public org.bear.api.identity.Credential.Builder clearUid() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public org.bear.api.identity.CredentialType getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public org.bear.api.identity.Credential.Builder setType(org.bear.api.identity.CredentialType value) {
      validate(fields()[2], value);
      this.type = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'type' field */
    public org.bear.api.identity.Credential.Builder clearType() {
      type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.bear.api.identity.Credential.Builder setName(java.lang.String value) {
      validate(fields()[3], value);
      this.name = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'name' field */
    public org.bear.api.identity.Credential.Builder clearName() {
      name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.String getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public org.bear.api.identity.Credential.Builder setValue(java.lang.String value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'value' field */
    public org.bear.api.identity.Credential.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Credential build() {
      try {
        Credential record = new Credential();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.uid = fieldSetFlags()[1] ? this.uid : (java.lang.Long) defaultValue(fields()[1]);
        record.type = fieldSetFlags()[2] ? this.type : (org.bear.api.identity.CredentialType) defaultValue(fields()[2]);
        record.name = fieldSetFlags()[3] ? this.name : (java.lang.String) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
