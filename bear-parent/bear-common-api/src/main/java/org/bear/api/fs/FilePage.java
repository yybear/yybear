/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bear.api.fs;  
@SuppressWarnings("all")
/** * 文件列表分页对象
	 *
	 * @field items 文件列表
	 *
	 * @field total 文件总数 */
@org.apache.avro.specific.AvroGenerated
public class FilePage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FilePage\",\"namespace\":\"org.bear.api.fs\",\"doc\":\"* 文件列表分页对象\\r\\n\\t *\\r\\n\\t * @field items 文件列表\\r\\n\\t *\\r\\n\\t * @field total 文件总数\",\"fields\":[{\"name\":\"items\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"File\",\"doc\":\"* 文件描述信息,通过主键或者业务加所有者即可获得所关联的文件信息\\r\\n\\t *\\r\\n\\t * @field id 文件的id,主键\\r\\n\\t *\\r\\n\\t * @field bizKey 文件所属的业务\\r\\n\\t *\\r\\n\\t * @field owner 文件的所有者,建议为业务对象的主键,这样配合bizKey就可以确定和这个业务对象向关联的所有文件\\r\\n\\t *\\r\\n\\t * @field userId 文件的关联用户,表示文件由哪个用户上传\\r\\n\\t *\\r\\n\\t * @field name 文件的名称\\r\\n\\t *\\r\\n\\t * @field size 文件的大小\\r\\n\\t *\\r\\n\\t * @field data 文件的附加属性\\r\\n\\t *\\r\\n\\t * @field updateAt 文件的最后更新时间\\r\\n\\t *\\r\\n\\t * @field scope 文件的访问权限级别\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bizKey\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"owner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"data\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"updateAt\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":{\"type\":\"enum\",\"name\":\"AccessScope\",\"namespace\":\"org.bear.api.type\",\"doc\":\"表示实体对象的访问权限级别\",\"symbols\":[\"ALL\",\"USER\",\"ROLE\",\"TOKEN\",\"SELF\",\"SESSION\"]}}]}}},{\"name\":\"total\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<org.bear.api.fs.File> items;
  @Deprecated public int total;

  /**
   * Default constructor.
   */
  public FilePage() {}

  /**
   * All-args constructor.
   */
  public FilePage(java.util.List<org.bear.api.fs.File> items, java.lang.Integer total) {
    this.items = items;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return items;
    case 1: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: items = (java.util.List<org.bear.api.fs.File>)value$; break;
    case 1: total = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'items' field.
   */
  public java.util.List<org.bear.api.fs.File> getItems() {
    return items;
  }

  /**
   * Sets the value of the 'items' field.
   * @param value the value to set.
   */
  public void setItems(java.util.List<org.bear.api.fs.File> value) {
    this.items = value;
  }

  /**
   * Gets the value of the 'total' field.
   */
  public java.lang.Integer getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * @param value the value to set.
   */
  public void setTotal(java.lang.Integer value) {
    this.total = value;
  }

  /** Creates a new FilePage RecordBuilder */
  public static org.bear.api.fs.FilePage.Builder newBuilder() {
    return new org.bear.api.fs.FilePage.Builder();
  }
  
  /** Creates a new FilePage RecordBuilder by copying an existing Builder */
  public static org.bear.api.fs.FilePage.Builder newBuilder(org.bear.api.fs.FilePage.Builder other) {
    return new org.bear.api.fs.FilePage.Builder(other);
  }
  
  /** Creates a new FilePage RecordBuilder by copying an existing FilePage instance */
  public static org.bear.api.fs.FilePage.Builder newBuilder(org.bear.api.fs.FilePage other) {
    return new org.bear.api.fs.FilePage.Builder(other);
  }
  
  /**
   * RecordBuilder for FilePage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FilePage>
    implements org.apache.avro.data.RecordBuilder<FilePage> {

    private java.util.List<org.bear.api.fs.File> items;
    private int total;

    /** Creates a new Builder */
    private Builder() {
      super(org.bear.api.fs.FilePage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bear.api.fs.FilePage.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FilePage instance */
    private Builder(org.bear.api.fs.FilePage other) {
            super(org.bear.api.fs.FilePage.SCHEMA$);
      if (isValidValue(fields()[0], other.items)) {
        this.items = data().deepCopy(fields()[0].schema(), other.items);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.total)) {
        this.total = data().deepCopy(fields()[1].schema(), other.total);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'items' field */
    public java.util.List<org.bear.api.fs.File> getItems() {
      return items;
    }
    
    /** Sets the value of the 'items' field */
    public org.bear.api.fs.FilePage.Builder setItems(java.util.List<org.bear.api.fs.File> value) {
      validate(fields()[0], value);
      this.items = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'items' field has been set */
    public boolean hasItems() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'items' field */
    public org.bear.api.fs.FilePage.Builder clearItems() {
      items = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Integer getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public org.bear.api.fs.FilePage.Builder setTotal(int value) {
      validate(fields()[1], value);
      this.total = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'total' field */
    public org.bear.api.fs.FilePage.Builder clearTotal() {
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public FilePage build() {
      try {
        FilePage record = new FilePage();
        record.items = fieldSetFlags()[0] ? this.items : (java.util.List<org.bear.api.fs.File>) defaultValue(fields()[0]);
        record.total = fieldSetFlags()[1] ? this.total : (java.lang.Integer) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
