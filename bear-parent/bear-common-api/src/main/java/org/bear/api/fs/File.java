/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bear.api.fs;  
@SuppressWarnings("all")
/** * 文件描述信息,通过主键或者业务加所有者即可获得所关联的文件信息
	 *
	 * @field id 文件的id,主键
	 *
	 * @field bizKey 文件所属的业务
	 *
	 * @field owner 文件的所有者,建议为业务对象的主键,这样配合bizKey就可以确定和这个业务对象向关联的所有文件
	 *
	 * @field userId 文件的关联用户,表示文件由哪个用户上传
	 *
	 * @field name 文件的名称
	 *
	 * @field size 文件的大小
	 *
	 * @field data 文件的附加属性
	 *
	 * @field updateAt 文件的最后更新时间
	 *
	 * @field scope 文件的访问权限级别 */
@org.apache.avro.specific.AvroGenerated
public class File extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"File\",\"namespace\":\"org.bear.api.fs\",\"doc\":\"* 文件描述信息,通过主键或者业务加所有者即可获得所关联的文件信息\\r\\n\\t *\\r\\n\\t * @field id 文件的id,主键\\r\\n\\t *\\r\\n\\t * @field bizKey 文件所属的业务\\r\\n\\t *\\r\\n\\t * @field owner 文件的所有者,建议为业务对象的主键,这样配合bizKey就可以确定和这个业务对象向关联的所有文件\\r\\n\\t *\\r\\n\\t * @field userId 文件的关联用户,表示文件由哪个用户上传\\r\\n\\t *\\r\\n\\t * @field name 文件的名称\\r\\n\\t *\\r\\n\\t * @field size 文件的大小\\r\\n\\t *\\r\\n\\t * @field data 文件的附加属性\\r\\n\\t *\\r\\n\\t * @field updateAt 文件的最后更新时间\\r\\n\\t *\\r\\n\\t * @field scope 文件的访问权限级别\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bizKey\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"owner\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"data\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"updateAt\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":{\"type\":\"enum\",\"name\":\"AccessScope\",\"namespace\":\"org.bear.api.standard\",\"doc\":\"* 表示实体对象的访问权限级别\\r\\n\\t *\\r\\n\\t * @field ALL  所有人都可以访问\\r\\n\\t *\\r\\n\\t * @field USER 登陆用户即可访问\\r\\n\\t *\\r\\n\\t * @field ROLE 拥有指定角色才能访问\\r\\n\\t *\\r\\n\\t * @field TOKEN需要通过token认证才能访问\\r\\n\\t *\\r\\n\\t * @field SELF 只有自己才能访问\\r\\n\\t *\\r\\n\\t * @field SESSION 需要会话授权才能访问\",\"symbols\":[\"ALL\",\"USER\",\"ROLE\",\"TOKEN\",\"SELF\",\"SESSION\"]}}]}");
  @Deprecated public long id;
  @Deprecated public java.lang.String bizKey;
  @Deprecated public java.lang.String owner;
  @Deprecated public long userId;
  @Deprecated public java.lang.String name;
  @Deprecated public int size;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> data;
  @Deprecated public long updateAt;
  @Deprecated public org.bear.api.type.AccessScope scope;

  /**
   * Default constructor.
   */
  public File() {}

  /**
   * All-args constructor.
   */
  public File(java.lang.Long id, java.lang.String bizKey, java.lang.String owner, java.lang.Long userId, java.lang.String name, java.lang.Integer size, java.util.Map<java.lang.String,java.lang.String> data, java.lang.Long updateAt, org.bear.api.type.AccessScope scope) {
    this.id = id;
    this.bizKey = bizKey;
    this.owner = owner;
    this.userId = userId;
    this.name = name;
    this.size = size;
    this.data = data;
    this.updateAt = updateAt;
    this.scope = scope;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return bizKey;
    case 2: return owner;
    case 3: return userId;
    case 4: return name;
    case 5: return size;
    case 6: return data;
    case 7: return updateAt;
    case 8: return scope;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: bizKey = (java.lang.String)value$; break;
    case 2: owner = (java.lang.String)value$; break;
    case 3: userId = (java.lang.Long)value$; break;
    case 4: name = (java.lang.String)value$; break;
    case 5: size = (java.lang.Integer)value$; break;
    case 6: data = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 7: updateAt = (java.lang.Long)value$; break;
    case 8: scope = (org.bear.api.type.AccessScope)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'bizKey' field.
   */
  public java.lang.String getBizKey() {
    return bizKey;
  }

  /**
   * Sets the value of the 'bizKey' field.
   * @param value the value to set.
   */
  public void setBizKey(java.lang.String value) {
    this.bizKey = value;
  }

  /**
   * Gets the value of the 'owner' field.
   */
  public java.lang.String getOwner() {
    return owner;
  }

  /**
   * Sets the value of the 'owner' field.
   * @param value the value to set.
   */
  public void setOwner(java.lang.String value) {
    this.owner = value;
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'size' field.
   */
  public java.lang.Integer getSize() {
    return size;
  }

  /**
   * Sets the value of the 'size' field.
   * @param value the value to set.
   */
  public void setSize(java.lang.Integer value) {
    this.size = value;
  }

  /**
   * Gets the value of the 'data' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.util.Map<java.lang.String,java.lang.String> value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'updateAt' field.
   */
  public java.lang.Long getUpdateAt() {
    return updateAt;
  }

  /**
   * Sets the value of the 'updateAt' field.
   * @param value the value to set.
   */
  public void setUpdateAt(java.lang.Long value) {
    this.updateAt = value;
  }

  /**
   * Gets the value of the 'scope' field.
   */
  public org.bear.api.type.AccessScope getScope() {
    return scope;
  }

  /**
   * Sets the value of the 'scope' field.
   * @param value the value to set.
   */
  public void setScope(org.bear.api.type.AccessScope value) {
    this.scope = value;
  }

  /** Creates a new File RecordBuilder */
  public static org.bear.api.fs.File.Builder newBuilder() {
    return new org.bear.api.fs.File.Builder();
  }
  
  /** Creates a new File RecordBuilder by copying an existing Builder */
  public static org.bear.api.fs.File.Builder newBuilder(org.bear.api.fs.File.Builder other) {
    return new org.bear.api.fs.File.Builder(other);
  }
  
  /** Creates a new File RecordBuilder by copying an existing File instance */
  public static org.bear.api.fs.File.Builder newBuilder(org.bear.api.fs.File other) {
    return new org.bear.api.fs.File.Builder(other);
  }
  
  /**
   * RecordBuilder for File instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<File>
    implements org.apache.avro.data.RecordBuilder<File> {

    private long id;
    private java.lang.String bizKey;
    private java.lang.String owner;
    private long userId;
    private java.lang.String name;
    private int size;
    private java.util.Map<java.lang.String,java.lang.String> data;
    private long updateAt;
    private org.bear.api.type.AccessScope scope;

    /** Creates a new Builder */
    private Builder() {
      super(org.bear.api.fs.File.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bear.api.fs.File.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing File instance */
    private Builder(org.bear.api.fs.File other) {
            super(org.bear.api.fs.File.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bizKey)) {
        this.bizKey = data().deepCopy(fields()[1].schema(), other.bizKey);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.owner)) {
        this.owner = data().deepCopy(fields()[2].schema(), other.owner);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userId)) {
        this.userId = data().deepCopy(fields()[3].schema(), other.userId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.size)) {
        this.size = data().deepCopy(fields()[5].schema(), other.size);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.data)) {
        this.data = data().deepCopy(fields()[6].schema(), other.data);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.updateAt)) {
        this.updateAt = data().deepCopy(fields()[7].schema(), other.updateAt);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.scope)) {
        this.scope = data().deepCopy(fields()[8].schema(), other.scope);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public org.bear.api.fs.File.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public org.bear.api.fs.File.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'bizKey' field */
    public java.lang.String getBizKey() {
      return bizKey;
    }
    
    /** Sets the value of the 'bizKey' field */
    public org.bear.api.fs.File.Builder setBizKey(java.lang.String value) {
      validate(fields()[1], value);
      this.bizKey = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'bizKey' field has been set */
    public boolean hasBizKey() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'bizKey' field */
    public org.bear.api.fs.File.Builder clearBizKey() {
      bizKey = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'owner' field */
    public java.lang.String getOwner() {
      return owner;
    }
    
    /** Sets the value of the 'owner' field */
    public org.bear.api.fs.File.Builder setOwner(java.lang.String value) {
      validate(fields()[2], value);
      this.owner = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'owner' field has been set */
    public boolean hasOwner() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'owner' field */
    public org.bear.api.fs.File.Builder clearOwner() {
      owner = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'userId' field */
    public java.lang.Long getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public org.bear.api.fs.File.Builder setUserId(long value) {
      validate(fields()[3], value);
      this.userId = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'userId' field */
    public org.bear.api.fs.File.Builder clearUserId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.String getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.bear.api.fs.File.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'name' field */
    public org.bear.api.fs.File.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'size' field */
    public java.lang.Integer getSize() {
      return size;
    }
    
    /** Sets the value of the 'size' field */
    public org.bear.api.fs.File.Builder setSize(int value) {
      validate(fields()[5], value);
      this.size = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'size' field has been set */
    public boolean hasSize() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'size' field */
    public org.bear.api.fs.File.Builder clearSize() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'data' field */
    public java.util.Map<java.lang.String,java.lang.String> getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public org.bear.api.fs.File.Builder setData(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[6], value);
      this.data = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'data' field */
    public org.bear.api.fs.File.Builder clearData() {
      data = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'updateAt' field */
    public java.lang.Long getUpdateAt() {
      return updateAt;
    }
    
    /** Sets the value of the 'updateAt' field */
    public org.bear.api.fs.File.Builder setUpdateAt(long value) {
      validate(fields()[7], value);
      this.updateAt = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'updateAt' field has been set */
    public boolean hasUpdateAt() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'updateAt' field */
    public org.bear.api.fs.File.Builder clearUpdateAt() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'scope' field */
    public org.bear.api.type.AccessScope getScope() {
      return scope;
    }
    
    /** Sets the value of the 'scope' field */
    public org.bear.api.fs.File.Builder setScope(org.bear.api.type.AccessScope value) {
      validate(fields()[8], value);
      this.scope = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'scope' field has been set */
    public boolean hasScope() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'scope' field */
    public org.bear.api.fs.File.Builder clearScope() {
      scope = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public File build() {
      try {
        File record = new File();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.bizKey = fieldSetFlags()[1] ? this.bizKey : (java.lang.String) defaultValue(fields()[1]);
        record.owner = fieldSetFlags()[2] ? this.owner : (java.lang.String) defaultValue(fields()[2]);
        record.userId = fieldSetFlags()[3] ? this.userId : (java.lang.Long) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.size = fieldSetFlags()[5] ? this.size : (java.lang.Integer) defaultValue(fields()[5]);
        record.data = fieldSetFlags()[6] ? this.data : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[6]);
        record.updateAt = fieldSetFlags()[7] ? this.updateAt : (java.lang.Long) defaultValue(fields()[7]);
        record.scope = fieldSetFlags()[8] ? this.scope : (org.bear.api.type.AccessScope) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
